services:
  auth-service:
    build:
      context: .
      dockerfile: auth-service/Dockerfile
    container_name: auth-service
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    env_file:
      - .env

  friend-service:
    build:
      context: .
      dockerfile: friend-service/Dockerfile
    container_name: friend-service
    depends_on:
      - postgres
    ports:
      - "8081:8081"
    env_file:
      - .env

  profile-service:
    build:
      context: .
      dockerfile: profile-service/Dockerfile
    container_name: profile-service
    depends_on:
      - postgres
    ports:
      - "8082:8082"
    env_file:
      - .env

  mongo:
    image: mongo:8.0-noble
    restart: always
    container_name: db_mongo_messages
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    volumes:
      - mongo-data:/data/db
      - ./schema/mongo:/docker-entrypoint-initdb.d
    ports:
      - "27017:27017"

  postgres:
    image: postgres:17.5
    restart: always
    container_name: db_postgres_users
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=tkl-chat
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: redis:8.0
    restart: always
    container_name: db_redis_sessions
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes:
      - redis-data:/data
    command: [ "redis-server", "--requirepass", "$REDIS_PASSWORD" ]
    ports:
      - "6379:6379"

volumes:
  mongo-data:
  postgres-data:
  redis-data:
