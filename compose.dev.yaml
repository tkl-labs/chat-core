services:
  svc-init:
    build:
      context: .
      dockerfile: services/init/Dockerfile
    container_name: svc-init-dev
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/tkl-chat
    command: >
      sh -c "diesel setup && diesel migration run"
      
  svc-auth:
    build:
      context: .
      dockerfile: services/auth/Dockerfile.dev
    container_name: svc-auth-dev
    depends_on:
      - postgres
    env_file:
      - .env
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4318
    restart: unless-stopped

  svc-friend:
    build:
      context: .
      dockerfile: services/friend/Dockerfile.dev
    container_name: svc-friend-dev
    depends_on:
      - postgres
    env_file:
      - .env
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4318
    restart: unless-stopped

  svc-profile:
    build:
      context: .
      dockerfile: services/profile/Dockerfile.dev
    container_name: svc-profile-dev
    depends_on:
      - postgres
    env_file:
      - .env
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4318
    restart: unless-stopped

  nginx:
    image: nginx:1.27
    restart: unless-stopped
    container_name: svc-nginx-dev
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - svc-auth
      - svc-friend
      - svc-profile
      
  mongo:
    image: mongo:8.0-noble
    restart: unless-stopped
    container_name: db-mongo-dev
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    volumes:
      - mongo-data-dev:/data/db
      - ./schema/mongo:/docker-entrypoint-initdb.d
    ports:
      - "27017:27017"

  postgres:
    image: postgres:17.5
    restart: unless-stopped
    container_name: db-postgres-dev
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=tkl-chat
    volumes:
      - postgres-data-dev:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d tkl-chat"]
      interval: 10s
      timeout: 5s
      retries: 6

  redis:
    image: redis:8.0
    restart: always
    container_name: db-redis-dev
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes:
      - redis-data-dev:/data
    command: sh -c "redis-server --requirepass ${REDIS_PASSWORD}"
    ports:
      - "6379:6379"
    
  jaeger:
    image: jaegertracing/all-in-one:1.69.0
    container_name: svc-jaeger-dev
    ports:
      - "16686:16686" # Jaeger UI
      - "4317:4317" # OpenTelemetry gRPC
      - "4318:4318" # OpenTelemetry HTTP
      - "5778:5778" # Configuration service
      - "9411:9411" # Zipkin compatibility
    environment:
      - LOG_LEVEL=debug
      - COLLECTOR_OTLP_ENABLED=true
      - OTLP_HTTP_ENDPOINT=http://localhost:4318
      - OTLP_GRPC_ENDPOINT=http://localhost:4317
      - SPAN_STORAGE_TYPE=memory
      - JAEGER_SAMPLER_TYPE=probabilistic
      - JAEGER_SAMPLER_PARAM=1.0
      - JAEGER_REPORTER_FLUSH_INTERVAL=5000
    restart: unless-stopped

volumes:
  mongo-data-dev:
  postgres-data-dev:
  redis-data-dev:
